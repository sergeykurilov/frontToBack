{"version":3,"sources":["actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/posts.js","reducers/index.js","components/store.js","components/layout/alert.js","actions/profile.js","components/layout/spinner.gif","components/layout/Spinner.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/Posts/PostItem.js","actions/post.js","components/Posts/PostForm.js","components/Posts/Posts.js","components/Post/CommentForm.js","components/Post/CommentItem.js","components/Post/Post.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_FAIL","REGISTER_SUCCESS","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","UPDATE_PROFILE","ACCOUNT_DELETED","GET_PROFILES","GET_REPOS","GET_POSTS","POSTS_ERROR","UPDATE_LIKES","DELETE_POSTS","ADD_POST","GET_POST","ADD_COMMENT","DELETE_COMMENT","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","currentTarget","value","onSubmit","preventDefault","placeholder","required","minLength","login","console","log","initialState","getItem","user","profile","profiles","repos","posts","rootReducer","combineReducers","alert","action","filter","setItem","removeItem","map","_id","likes","comments","comment","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","alerts","length","getCurrentUserProfile","statusText","status","createProfile","history","edit","push","Spinner","src","spinner","style","width","margin","display","alt","DashboardActions","deleteExperience","delete","experience","experiences","exp","company","title","format","from","deleteEducation","education","educations","edu","school","degree","deleteAccount","PropTypes","func","isRequired","window","confirm","useEffect","Component","component","rest","render","props","withRouter","website","skills","location","githubusername","bio","twitter","facebook","youtube","instagram","linkedin","displaySocialInputs","toggleSocialInputs","alue","addExperience","put","current","description","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","addEducation","fieldofstudy","ProfileItem","avatar","slice","skill","index","getProfiles","ProfileTop","social","target","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEdication","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfilesById","userId","match","params","ProfileEducation","PostItem","text","date","addLike","deletePost","removeLike","showActions","defaultProps","addPost","setText","getPosts","addComment","postId","deleteComment","commentId","getPost","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c820acf3.chunk.js","sourcesContent":["export const SET_ALERT = \"SET_ALERT\"\nexport const REMOVE_ALERT = \"REMOVE_ALERT\"\nexport const REGISTER_FAIL = \"REGISTER_FAIL\"\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\"\nexport const USER_LOADED = \"USER_LOADED\"\nexport const AUTH_ERROR = \"AUTH_ERROR\"\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\nexport const LOGIN_FAIL = \"LOGIN_FAIL\"\nexport const LOGOUT = \"LOGOUT\"\nexport const GET_PROFILE = \"GET_PROFILE\"\nexport const PROFILE_ERROR = \"PROFILE_ERROR\"\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\"\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\"\nexport const ACCOUNT_DELETED = \"ACCOUNT_DELETED\"\nexport const GET_PROFILES = \"GET_PROFILES\"\nexport const GET_REPOS = \"GET_REPOS\"\nexport const GET_POSTS = \"GET_POSTS\"\nexport const POSTS_ERROR = \"POSTS_ERROR\"\nexport const UPDATE_LIKES = \"UPDATE_LIKES\"\nexport const DELETE_POSTS = \"DELETE_POSTS\"\nexport const ADD_POST = \"ADD_POST\"\nexport const GET_POST = \"GET_POST\"\nexport const ADD_COMMENT = \"ADD_COMMENT\"\nexport const DELETE_COMMENT = \"DELETE_COMMENT\"\n","import {REMOVE_ALERT, SET_ALERT} from \"./types\";\nimport {v4 as uuidv4} from 'uuid';\n\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n    const id = uuidv4();\n    dispatch({\n        type: SET_ALERT,\n        payload: {msg, alertType, id}\n    })\n\n    setTimeout(() => dispatch({type: REMOVE_ALERT, payload: id}), timeout)\n}","import axios from \"axios\";\n\nconst setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common['x-auth-token'] = token\n    } else {\n        delete axios.defaults.headers.common['x-auth-token']\n    }\n}\n\nexport default setAuthToken","//Register user\nimport axios from \"axios\";\nimport {\n    AUTH_ERROR,\n    CLEAR_PROFILE,\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    LOGOUT,\n    REGISTER_FAIL,\n    REGISTER_SUCCESS,\n    USER_LOADED\n} from \"./types\";\nimport {setAlert} from \"./alert\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\n// load user\nexport const loadUser = () => async (dispatch) => {\n    if (localStorage.token) {\n        setAuthToken(localStorage.token);\n    }\n    try {\n        const res = await axios.get('/api/auth')\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        })\n    } catch (e) {\n        dispatch({\n            type: AUTH_ERROR\n        })\n    }\n}\nexport const login = ({email, password}) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    console.log(email, password)\n    const body = JSON.stringify({email, password})\n    console.log(body)\n    try {\n        const res = await axios.post('/api/auth', body, config)\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        })\n        console.log(res.data)\n        dispatch(loadUser())\n    } catch (e) {\n        const errors = e.response.data.errors\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type: LOGIN_FAIL,\n        })\n    }\n}\n\nexport const register = ({name, email, password}) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({name, email, password})\n\n    try {\n        const res = await axios.post('/api/users', body, config)\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        })\n        dispatch(loadUser())\n    } catch (e) {\n        const errors = e.response.data.errors\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n        dispatch({\n            type: REGISTER_FAIL,\n        })\n    }\n}\n\n//logout//clear profile\n\nexport const logout = () => dispatch => {\n    dispatch({type: CLEAR_PROFILE})\n    dispatch({type: LOGOUT})\n}\n\n//clear profile\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../actions/auth\";\nimport PropTypes from \"prop-types\";\n\nconst Navbar = ({auth: {isAuthenticated, loading}, logout}) => {\n    const authLinks = (\n        <ul>\n            <li><Link to='/profiles'>\n                Developers\n            </Link></li>\n            <li><Link to='/posts'>\n                Posts\n            </Link></li>\n            <li><Link to='/dashboard'>\n                < i className=\"fa fa-user\"></i>{' '}\n                <span className=\"hide-sm\">Dashboard</span>\n            </Link></li>\n            <li><a onClick={logout} href='#!'>\n                <i className=\"fa fa-sign-out-alt\"></i>{' '}\n                <span className=\"hide-sm\">Logout</span>\n            </a></li>\n        </ul>\n    )\n\n    const guestLinks = (\n        <ul>\n            <li><Link to='/profiles'>\n                Developers\n            </Link></li>\n            <li><Link to='/register'>Register</Link></li>\n            <li><Link to='/login'>Login</Link></li>\n        </ul>\n    )\n\n    return (\n        <nav className=\"navbar bg-dark\">\n            <h1>\n                <Link to=\"/\">\n                    <i className=\"fas fa-code\"/> DevConnector\n                </Link>\n            </h1>\n            {!loading && <>{isAuthenticated ? authLinks : guestLinks}</>}\n        </nav>\n    );\n};\n\nNavbar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n})\n\n\nexport default connect(mapStateToProps, {logout})(Navbar);","import React from 'react';\nimport {Link, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst Landing = ({isAuthenticated}) => {\n    if (isAuthenticated) {\n        return <Redirect to='/dashboard'/>\n    }\n    return (\n        <section className=\"landing\">\n            <div className=\"dark-overlay\">\n                <div className=\"landing-inner\">\n                    <h1 className=\"x-large\">Developer Connector</h1>\n                    <p className=\"lead\">\n                        Create a developer profile/portfolio, share posts and get help from\n                        other developers\n                    </p>\n                    <div className=\"buttons\">\n                        <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>\n                        <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n\nLanding.propTypes = {\n    isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps)(Landing);","import React, {useState} from 'react';\nimport {Link, Redirect} from \"react-router-dom\";\nimport {setAlert} from \"../../actions/alert\"\nimport {connect} from \"react-redux\";\nimport propType from \"prop-types\"\nimport {register} from \"../../actions/auth\"\n\nconst Register = ({setAlert, register, isAuthenticated}) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    })\n    const {name, email, password, password2} = formData\n\n    const onChange = (e) => setFormData({...formData, [e.currentTarget.name]: e.currentTarget.value})\n    const onSubmit = async e => {\n        e.preventDefault()\n        if (password !== password2) {\n            setAlert('Password do not match', 'danger')\n        } else {\n            register({\n                name, email, password\n            })\n        }\n    }\n\n    //redirect if login\n\n    if (isAuthenticated) {\n        return <Redirect to='/dashboard'/>\n    }\n\n    return (\n        <>\n            <h1 className=\"large text-primary\">Sign Up</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"/> Create Your Account</p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Name\" onChange={e => onChange(e)} value={name} name=\"name\"\n                           required/>\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"email\" value={email} onChange={e => onChange(e)} placeholder=\"Email Address\"\n                           name=\"email\"/>\n                    <small className=\"form-text\"\n                    >This site uses Gravatar so if you want a profile image, use a\n                        Gravatar email</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={e => onChange(e)}\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        minLength=\"6\"\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        value={password2}\n                        onChange={e => onChange(e)}\n                        placeholder=\"Confirm Password\"\n                        name=\"password2\"\n                        minLength=\"6\"\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\"/>\n            </form>\n            <p className=\"my-1\">\n                Already have an account? <Link to='/login'>Sign In</Link>\n            </p>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nRegister.propTypes = {\n    setAlert: propType.func.isRequired,\n    register: propType.func.isRequired,\n    isAuthenticated: propType.bool\n}\n\nexport default connect(mapStateToProps, {setAlert, register})(Register);","import React, {useState} from 'react';\nimport {Link, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../actions/auth\";\nimport PropTypes from \"prop-types\"\n\nconst Login = ({login, isAuthenticated}) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n    })\n    const {email, password} = formData\n\n    const onChange = (e) => setFormData({...formData, [e.currentTarget.name]: e.currentTarget.value})\n    const onSubmit = async e => {\n        e.preventDefault()\n        console.log(email, password)\n        login({email, password})\n    }\n\n    //redirect if login\n\n    if (isAuthenticated) {\n        return <Redirect to='/dashboard'/>\n    }\n\n    return (\n        <>\n            <h1 className=\"large text-primary\">Sign In</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign into Your Account</p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input type=\"email\" value={email} onChange={e => onChange(e)} placeholder=\"Email Address\"\n                           name=\"email\" required/>\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={e => onChange(e)}\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        minLength=\"6\"\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\"/>\n            </form>\n            <p className=\"my-1\">\n                Don't have an account? <Link to='/register'>Sign Up</Link>\n            </p>\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n}\n\nexport default connect(mapStateToProps, {login})(Login);","import {REMOVE_ALERT, SET_ALERT} from \"../actions/types\";\n\nconst initialState = []\n\nexport default function (state = initialState, action) {\n    const {type, payload} = action;\n    switch (type) {\n        case SET_ALERT: {\n            return [...state, payload]\n        }\n        case REMOVE_ALERT: {\n            return state.filter(alert => alert.id !== payload)\n        }\n        default:\n            return state\n    }\n}","import {\n    ACCOUNT_DELETED,\n    AUTH_ERROR,\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    LOGOUT,\n    REGISTER_FAIL,\n    REGISTER_SUCCESS,\n    USER_LOADED\n} from '../actions/types'\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n}\n\nexport default function (state = initialState, action) {\n    const {type, payload} = action;\n\n    switch (type) {\n        case USER_LOADED: {\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        }\n        case LOGIN_SUCCESS:\n        case REGISTER_SUCCESS: {\n            localStorage.setItem('token', payload.token)\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false,\n            }\n        }\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n        case ACCOUNT_DELETED:\n        case REGISTER_FAIL: {\n            localStorage.removeItem('token')\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n            }\n        }\n        default:\n            return state\n    }\n}","import {CLEAR_PROFILE, GET_PROFILE, GET_PROFILES, GET_REPOS, PROFILE_ERROR, UPDATE_PROFILE} from \"../actions/types\";\n\nconst initialState = {\n    profile: null,\n    profiles: [],\n    repos: [],\n    loading: true,\n    error: {}\n}\n\nexport default function (state = initialState, action) {\n    const {type, payload} = action\n\n    switch (type) {\n        case GET_PROFILE:\n        case UPDATE_PROFILE: {\n            return {\n                ...state,\n                profile: payload,\n                loading: false\n            }\n        }\n        case GET_PROFILES: {\n            return {\n                ...state,\n                profiles: payload,\n                loading: false\n            }\n        }\n        case GET_REPOS: {\n            return {\n                ...state,\n                repos: payload,\n                loading: false\n            }\n        }\n        case PROFILE_ERROR: {\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            }\n        }\n        case CLEAR_PROFILE: {\n            return {\n                ...state,\n                profile: null,\n                repos: [],\n                loading: false\n            }\n        }\n        default:\n            return state\n\n    }\n}","import {\n    ADD_COMMENT,\n    ADD_POST,\n    DELETE_COMMENT,\n    DELETE_POSTS,\n    GET_POST,\n    GET_POSTS,\n    POSTS_ERROR,\n    UPDATE_LIKES\n} from \"../actions/types\";\n\nconst initialState = {\n    posts: [],\n    post: null,\n    loading: false,\n    error: {}\n}\n\nexport default function (state = initialState, action) {\n    const {type, payload} = action\n    switch (type) {\n        case GET_POSTS: {\n            return {\n                ...state,\n                posts: payload,\n                loading: false\n            }\n        }\n        case GET_POST: {\n            return {\n                ...state,\n                post: payload,\n                loading: false\n            }\n        }\n        case ADD_POST: {\n            return {\n                ...state,\n                posts: [payload, ...state],\n                loading: false\n            }\n        }\n        case POSTS_ERROR: {\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            }\n        }\n        case UPDATE_LIKES: {\n            return {\n                ...state,\n                posts: state.posts.map(post => post._id === payload.id ? {...post, likes: payload.likes} : post),\n                loading: false\n            }\n        }\n        case DELETE_POSTS: {\n            return {\n                ...state,\n                posts: state.posts.filter(post => post._id === payload),\n                loading: false\n            }\n        }\n        case ADD_COMMENT: {\n            return {\n                ...state,\n                post: {...state.post, comments: payload},\n                loading: false\n            }\n        }\n        case DELETE_COMMENT: {\n            return {\n                ...state,\n                post: {...state.post, comments: state.post.comments.filter(comment => comment._id !== payload)},\n                loading: false\n            }\n        }\n        default:\n            return state\n\n    }\n}","import {combineReducers} from \"redux\";\nimport alert from \"./alert\";\nimport auth from \"./auth\";\nimport profile from \"./profile\";\nimport post from \"./posts\";\n\nconst rootReducer = combineReducers({\n    alert,\n    auth,\n    profile,\n    post,\n})\n\nexport default rootReducer","import {applyMiddleware, createStore} from \"redux\"\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport rootReducer from \"../reducers\";\n\n\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import React from 'react';\nimport {connect} from \"react-redux\";\nimport propType from \"prop-types\";\n\nconst Alert = ({alerts}) => alerts !== alerts.length > 0 && alerts.map(alert => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n        {alert.msg}\n    </div>\n))\n\nAlert.propTypes = {\n    alerts: propType.array.isRequired\n}\nconst mapStateToProps = (state) => ({\n    alerts: state.alert\n})\n\n\nexport default connect(mapStateToProps)(Alert);","//get current user profile\n\nimport axios from \"axios\";\nimport {\n    ACCOUNT_DELETED,\n    CLEAR_PROFILE,\n    GET_PROFILE,\n    GET_PROFILES,\n    GET_REPOS,\n    PROFILE_ERROR,\n    UPDATE_PROFILE\n} from \"./types\";\nimport {setAlert} from \"./alert\";\n\nexport const getCurrentUserProfile = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile/me')\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n}\n//get all profiles\nexport const getProfiles = () => async dispatch => {\n    dispatch({type: CLEAR_PROFILE})\n    try {\n        const res = await axios.get('/api/profile')\n        dispatch({\n            type: GET_PROFILES,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n}\n\n\n//get all profiles\nexport const getProfilesById = (userId) => async dispatch => {\n    dispatch({type: CLEAR_PROFILE})\n    try {\n        const res = await axios.get(`/api/profile/user/${userId}`)\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n}\n\n//get github repos\nexport const getGithubRepos = (username) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/profile/github/${username}`)\n        dispatch({\n            type: GET_REPOS,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n}\n\n//create or update profile\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const res = await axios.post('/api/profile', formData, config)\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        })\n        dispatch(setAlert(edit ? 'Profile updated' : 'Profile created', 'success'))\n\n        if (!edit) {\n            history.push('/dashboard')\n        }\n\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n        const errors = err.response.data.errors\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n\n    }\n}\n\n//add experience\nexport const addExperience = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const res = await axios.put('/api/profile/experience', formData, config)\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        })\n        dispatch(setAlert('Experience added successfully', 'success'))\n        history.push('/dashboard')\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n        const errors = err.response.data.errors\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n    }\n}\n\n//add education\nexport const addEducation = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const res = await axios.put('/api/profile/education', formData, config)\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        })\n        dispatch(setAlert('Education added successfully', 'success'))\n        history.push('/dashboard')\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n        const errors = err.response.data.errors\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n        }\n    }\n}\n\n//Delete experience\nexport const deleteExperience = (id) => async dispatch => {\n    try {\n        const res = await axios.delete(`api/profile/experience/${id}`)\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        })\n        dispatch(setAlert('Experience removed successfully', 'success'))\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n}\n\n//Delete education\nexport const deleteEducation = (id) => async dispatch => {\n    try {\n        const res = await axios.delete(`api/profile/education/${id}`)\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        })\n        dispatch(setAlert('Education removed successfully', 'success'))\n    } catch (err) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n}\n\n//delete account and profile\n\nexport const deleteAccount = () => async dispatch => {\n    if (window.confirm('Are you sure you want to delete this account?')) {\n        try {\n            await axios.delete(`/api/profile`)\n            dispatch({\n                type: CLEAR_PROFILE,\n            })\n            dispatch({\n                type: ACCOUNT_DELETED,\n            })\n            dispatch(setAlert('Your account has been permanently deleted.'))\n        } catch (err) {\n            dispatch({\n                type: PROFILE_ERROR,\n                payload: {\n                    msg: err.response.statusText,\n                    status: err.response.status\n                }\n            })\n        }\n    }\n\n\n}","export default __webpack_public_path__ + \"static/media/spinner.5cf28d5a.gif\";","import spinner from './spinner.gif'\nimport React, {Fragment} from \"react\";\n\nconst Spinner = () => {\n    return <Fragment>\n        <img\n            src={spinner}\n            style={{width: '50px', margin: 'auto', display: 'block'}}\n            alt=\"Loading...\"\n        />\n    </Fragment>\n}\n\nexport default Spinner","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst DashboardActions = () => {\n    return (\n        <div className=\"dash-buttons\">\n            <Link to='/edit-profile' className=\"btn btn-light\"\n            ><i className=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link\n            >\n            <Link to='/add-experience' className=\"btn btn-light\"\n            ><i className=\"fab fa-black-tie text-primary\"></i> Add Experience</Link\n            >\n            <Link to='/add-education' className=\"btn btn-light\"\n            ><i className=\"fas fa-graduation-cap text-primary\"></i> Add Education</Link\n            >\n        </div>\n    );\n};\n\nexport default DashboardActions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment'\nimport {deleteExperience} from \"../../actions/profile\";\nimport {connect} from \"react-redux\";\n\nconst Experience = ({experience, deleteExperience}) => {\n    const experiences = experience.map(exp => (\n        <tr key={exp._id}>\n            <td>{exp.company}</td>\n            <td className='hide-sm'>{exp.title}</td>\n            <td>\n                <Moment format='YYY/MM/DD'>{exp.from}</Moment> - {\n                exp.to === null ? (' Now') : (<Moment format='YYY/MM/DD'>{exp.to}</Moment>)\n            }\n            </td>\n            <td>\n                <button onClick={() => deleteExperience(exp._id)} className='btn btn-danger'>Delete</button>\n            </td>\n        </tr>\n    ))\n\n    return (\n        <>\n            <h2 className='my-2'>Experience Credentials</h2>\n            <table className='table'>\n                <thead>\n                <tr>\n                    <th>Company</th>\n                    <th className='hide-sm'>Title</th>\n                    <th className='hide-sm'>Years</th>\n                    <th className='hide-sm'/>\n                </tr>\n                </thead>\n                <tbody>\n                {experiences}\n                </tbody>\n            </table>\n        </>\n    );\n};\n\nExperience.propTypes = {\n    experience: PropTypes.array.isRequired,\n    deleteExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {deleteExperience})(Experience);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment'\nimport {connect} from \"react-redux\";\nimport {deleteEducation} from \"../../actions/profile\";\n\nconst Education = ({education, deleteEducation}) => {\n    const educations = education.map(edu => (\n        <tr key={edu._id}>\n            <td>{edu.school}</td>\n            <td className='hide-sm'>{edu.degree}</td>\n            <td>\n                <Moment format='YYY/MM/DD'>{edu.from}</Moment> - {\n                edu.to === null ? (' Now') : (<Moment format='YYY/MM/DD'>{edu.to}</Moment>)\n            }\n            </td>\n            <td>\n                <button onClick={() => deleteEducation(edu._id)} className='btn btn-danger'>Delete</button>\n            </td>\n        </tr>\n    ))\n\n    return (\n        <>\n            <h2 className='my-2'>Education Credentials</h2>\n            <table className='table'>\n                <thead>\n                <tr>\n                    <th>School</th>\n                    <th className='hide-sm'>Degree</th>\n                    <th className='hide-sm'>Years</th>\n                    <th className='hide-sm'/>\n                </tr>\n                </thead>\n                <tbody>\n                {educations}\n                </tbody>\n            </table>\n        </>\n    );\n};\n\nEducation.propTypes = {\n    education: PropTypes.array.isRequired,\n    deleteEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {deleteEducation})(Education);","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {deleteAccount, getCurrentUserProfile} from \"../../actions/profile\";\nimport Spinner from \"../layout/Spinner\";\nimport {Link} from \"react-router-dom\";\nimport DashboardActions from \"./DashboardActions\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\n\nconst Dashboard = ({getCurrentUserProfile, auth: {user}, profile: {profile, loading}, deleteAccount}) => {\n    useEffect(() => {\n        getCurrentUserProfile()\n    }, [getCurrentUserProfile])\n    console.log(profile, loading)\n    return loading && profile === null\n        ? <Spinner/>\n        : <>\n            <h1 className='large text-primary'>Dashboard</h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"> {' '}\n                    Welcome {user && user.name}\n                </i>\n            </p>\n            {profile !== null ? <>\n                <DashboardActions/>\n                <Experience experience={profile.experience}/>\n                <Education education={profile.education}/>\n\n                <div className=\"my-2\">\n                    <button onClick={() => deleteAccount()} className='btn btn-danger'>\n                        <i className=\"fas fa-user-minus\"></i>{' '}\n                        Delete My Account\n                    </button>\n                </div>\n            </> : <>\n                <p>You have not yet setup a profile, please add some info</p>\n                <Link to='/create-profile' className='btn btn-primary my-1'>\n                    Create Profile\n                </Link>\n            </>}\n        </>\n}\n\nDashboard.propTypes = {\n    getCurrentUserProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    profile: state.profile,\n    deleteAccount: PropTypes.func.isRequired,\n})\n\n\nexport default connect(mapStateToProps, {getCurrentUserProfile, deleteAccount})(Dashboard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {Redirect, Route} from \"react-router-dom\";\n\nconst PrivateRoute = ({component: Component, auth: {isAuthenticated, loading}, ...rest}) => (\n    <Route {...rest} render={props =>\n        !isAuthenticated && !loading ? (\n            <Redirect to='/login'/>\n        ) : (\n            <Component {...props}/>\n        )}/>\n);\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n})\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {createProfile} from \"../../actions/profile\";\nimport PropTypes from \"prop-types\";\nimport {Link, withRouter} from \"react-router-dom\";\n\nconst CreateProfile = ({createProfile, history}) => {\n    const [formData, setFormData] = useState({\n        \"website\": '',\n        \"company\": '',\n        \"status\": '',\n        \"skills\": '',\n        \"location\": '',\n        \"bio\": '',\n        \"githubusername\": '',\n        \"twitter\": '',\n        \"facebook\": '',\n        \"youtube\": '',\n        \"instagram\": '',\n        \"linkedin\": ''\n    })\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        createProfile(formData, history)\n    }\n\n    const {\n        website,\n        company,\n        status,\n        skills,\n        location,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        youtube,\n        instagram,\n        linkedin\n    } = formData\n\n    const onChange = (e) => setFormData({...formData, [e.currentTarget.name]: e.currentTarget.value})\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false)\n\n    return (\n        <>\n            <h1 className=\"large text-primary\">\n                Create Your Profile\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\n                profile stand out\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\n                        <option value=\"0\">* Select Professional Status</option>\n                        <option value=\"Developer\">Developer</option>\n                        <option value=\"Junior Developer\">Junior Developer</option>\n                        <option value=\"Senior Developer\">Senior Developer</option>\n                        <option value=\"Manager\">Manager</option>\n                        <option value=\"Student or Learning\">Student or Learning</option>\n                        <option value=\"Instructor\">Instructor or Teacher</option>\n                        <option value=\"Intern\">Intern</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                    <small className=\"form-text\"\n                    >Give us an idea of where you are at in your career</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company}\n                           onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >Could be your own company or one you work for</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website}\n                           onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >Could be your own or a company website</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location}\n                           onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >City & state suggested (eg. Boston, MA)</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >Please use comma separated values (eg.\n                        HTML,CSS,JavaScript,PHP)</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        value={githubusername} onChange={e => onChange(e)}\n                        type=\"text\"\n                        placeholder=\"Github Username\"\n                        name=\"githubusername\"\n                    />\n                    <small className=\"form-text\"\n                    >If you want your latest repos and a Github link, include your\n                        username</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <textarea value={bio} onChange={e => onChange(e)} placeholder=\"A short bio of yourself\"\n                              name=\"bio\"></textarea>\n                    <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                    <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\"\n                            className=\"btn btn-light\">\n                        Add Social Network Links\n                    </button>\n                    <span>Optional</span>\n                </div>\n                {displaySocialInputs && <>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-twitter fa-2x\"></i>\n                        <input value={twitter} onChange={e => onChange(e)} type=\"text\" placeholder=\"Twitter URL\"\n                               name=\"twitter\"/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-facebook fa-2x\"></i>\n                        <input value={facebook} onChange={e => onChange(e)} type=\"text\" placeholder=\"Facebook URL\"\n                               name=\"facebook\"/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-youtube fa-2x\"></i>\n                        <input value={youtube} onChange={e => onChange(e)} type=\"text\" placeholder=\"YouTube URL\"\n                               name=\"youtube\"/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\n                        <input value={linkedin} onChange={e => onChange(e)} type=\"text\" placeholder=\"Linkedin URL\"\n                               name=\"linkedin\"/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-instagram fa-2x\"></i>\n                        <input alue={instagram} onChange={e => onChange(e)} type=\"text\" placeholder=\"Instagram URL\"\n                               name=\"instagram\"/>\n                    </div>\n                </>}\n\n                <input type=\"submit\" className=\"btn btn-primary my-1\"/>\n                <Link className=\"btn btn-light my-1\" to='/dashboard'>Go Back</Link>\n            </form>\n        </>\n    );\n};\n\nCreateProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n};\n\n\nexport default connect(null, {createProfile})\n(withRouter((CreateProfile)));","import React, {useEffect, useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {createProfile, getCurrentUserProfile} from \"../../actions/profile\";\nimport PropTypes from \"prop-types\";\nimport {Link, withRouter} from \"react-router-dom\";\n\nconst EditProfile = ({createProfile, getCurrentUserProfile, profile: {profile, loading}, history}) => {\n    const [formData, setFormData] = useState({\n        \"website\": '',\n        \"company\": '',\n        \"status\": '',\n        \"skills\": '',\n        \"location\": '',\n        \"bio\": '',\n        \"githubusername\": '',\n        \"twitter\": '',\n        \"facebook\": '',\n        \"youtube\": '',\n        \"instagram\": '',\n        \"linkedin\": ''\n    })\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        createProfile(formData, history, true)\n    }\n\n    useEffect(() => {\n        getCurrentUserProfile()\n\n        setFormData({\n            company: loading || !profile.company ? '' : profile.company,\n            website: loading || !profile.website ? '' : profile.website,\n            location: loading || !profile.location ? '' : profile.location,\n            status: loading || !profile.status ? '' : profile.status,\n            skills: loading || !profile.skills ? '' : profile.skills,\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\n            bio: loading || !profile.bio ? '' : profile.bio,\n            twitter: loading || !profile.twitter ? '' : profile.twitter,\n            facebook: loading || !profile.facebook ? '' : profile.facebook,\n            linkedin: loading || !profile.linkedin ? '' : profile.linkedin,\n            youtube: loading || !profile.youtube ? '' : profile.youtube,\n            instagram: loading || !profile.instagram ? '' : profile.instagram,\n        })\n    }, [loading])\n\n    const {\n        website,\n        company,\n        status,\n        skills,\n        location,\n        githubusername,\n        bio,\n        twitter,\n        facebook,\n        youtube,\n        instagram,\n        linkedin\n    } = formData\n\n    const onChange = (e) => setFormData({...formData, [e.currentTarget.name]: e.currentTarget.value})\n\n    const [displaySocialInputs, toggleSocialInputs] = useState(false)\n\n    return (\n        <>\n            <h1 className=\"large text-primary\">\n                Edit Your Profile\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\n                profile stand out\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\n                        <option value=\"0\">* Select Professional Status</option>\n                        <option value=\"Developer\">Developer</option>\n                        <option value=\"Junior Developer\">Junior Developer</option>\n                        <option value=\"Senior Developer\">Senior Developer</option>\n                        <option value=\"Manager\">Manager</option>\n                        <option value=\"Student or Learning\">Student or Learning</option>\n                        <option value=\"Instructor\">Instructor or Teacher</option>\n                        <option value=\"Intern\">Intern</option>\n                        <option value=\"Other\">Other</option>\n                    </select>\n                    <small className=\"form-text\"\n                    >Give us an idea of where you are at in your career</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company}\n                           onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >Could be your own company or one you work for</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website}\n                           onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >Could be your own or a company website</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location}\n                           onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >City & state suggested (eg. Boston, MA)</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\n                    <small className=\"form-text\"\n                    >Please use comma separated values (eg.\n                        HTML,CSS,JavaScript,PHP)</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        value={githubusername} onChange={e => onChange(e)}\n                        type=\"text\"\n                        placeholder=\"Github Username\"\n                        name=\"githubusername\"\n                    />\n                    <small className=\"form-text\"\n                    >If you want your latest repos and a Github link, include your\n                        username</small\n                    >\n                </div>\n                <div className=\"form-group\">\n                    <textarea value={bio} onChange={e => onChange(e)} placeholder=\"A short bio of yourself\"\n                              name=\"bio\"></textarea>\n                    <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                    <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\"\n                            className=\"btn btn-light\">\n                        Add Social Network Links\n                    </button>\n                    <span>Optional</span>\n                </div>\n                {displaySocialInputs && <>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-twitter fa-2x\"></i>\n                        <input value={twitter} onChange={e => onChange(e)} type=\"text\" placeholder=\"Twitter URL\"\n                               name=\"twitter\"/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-facebook fa-2x\"></i>\n                        <input value={facebook} onChange={e => onChange(e)} type=\"text\" placeholder=\"Facebook URL\"\n                               name=\"facebook\"/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-youtube fa-2x\"></i>\n                        <input value={youtube} onChange={e => onChange(e)} type=\"text\" placeholder=\"YouTube URL\"\n                               name=\"youtube\"/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\n                        <input value={linkedin} onChange={e => onChange(e)} type=\"text\" placeholder=\"Linkedin URL\"\n                               name=\"linkedin\"/>\n                    </div>\n\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-instagram fa-2x\"></i>\n                        <input alue={instagram} onChange={e => onChange(e)} type=\"text\" placeholder=\"Instagram URL\"\n                               name=\"instagram\"/>\n                    </div>\n                </>}\n\n                <input type=\"submit\" className=\"btn btn-primary my-1\"/>\n                <Link className=\"btn btn-light my-1\" to='/dashboard'>Go Back</Link>\n            </form>\n        </>\n    );\n};\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentUserProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n\n})\n\n\nexport default connect(mapStateToProps, {createProfile, getCurrentUserProfile})\n(withRouter((EditProfile)));","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {addExperience} from \"../../actions/profile\";\nimport {withRouter} from \"react-router-dom\";\n\nconst AddExperience = ({addExperience, history}) => {\n    const [formData, setFormData] = useState({\n        company: '',\n        title: '',\n        location: '',\n        from: '',\n        to: '',\n        current: false,\n        description: '',\n    })\n\n    const [toDateDisabled, toggleDisabled] = useState(false)\n\n    const {company, title, location, from, to, current, description} = formData\n\n    const onChange = (e) => setFormData({...formData, [e.currentTarget.name]: e.currentTarget.value})\n\n    return (\n        <>\n            <h1 className=\"large text-primary\">\n                Add An Experience\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-code-branch\"></i> Add any developer/programming\n                positions that you have had in the past\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e => {\n                e.preventDefault()\n                addExperience(formData, history)\n            }}>\n                <div className=\"form-group\">\n                    <input value={title} onChange={(e) => onChange(e)} type=\"text\" placeholder=\"* Job Title\"\n                           name=\"title\" required/>\n                </div>\n                <div className=\"form-group\">\n                    <input value={company} onChange={(e) => onChange(e)} type=\"text\" placeholder=\"* Company\"\n                           name=\"company\" required/>\n                </div>\n                <div className=\"form-group\">\n                    <input value={location} onChange={(e) => onChange(e)} type=\"text\" placeholder=\"Location\"\n                           name=\"location\"/>\n                </div>\n                <div className=\"form-group\">\n                    <h4>From Date</h4>\n                    <input value={from} onChange={(e) => onChange(e)} type=\"date\" name=\"from\"/>\n                </div>\n                <div className=\"form-group\">\n                    <p><input checked={current} onChange={(e) => {\n                        setFormData({...formData, current: !current})\n                        toggleDisabled(!toDateDisabled)\n                    }} type=\"checkbox\" name=\"current\" value=\"\"/>{' '} Current Job</p>\n                </div>\n                <div className=\"form-group\">\n                    <h4>To Date</h4>\n                    <input disabled={toDateDisabled ? 'disabled' : ''} value={to} onChange={(e) => onChange(e)}\n                           type=\"date\" name=\"to\"/>\n                </div>\n                <div className=\"form-group\">\n          <textarea\n              value={description} onChange={(e) => onChange(e)}\n              name=\"description\"\n              cols=\"30\"\n              rows=\"5\"\n              placeholder=\"Job Description\"\n          ></textarea>\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\"/>\n                <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\n            </form>\n        </>\n    );\n};\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {addExperience})(withRouter(AddExperience));","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {addEducation} from \"../../actions/profile\";\nimport {withRouter} from \"react-router-dom\";\n\nconst AddEducation = ({addEducation, history}) => {\n    const [formData, setFormData] = useState({\n        school: '',\n        degree: '',\n        fieldofstudy: '',\n        from: '',\n        to: '',\n        current: false,\n        description: '',\n    })\n\n    const [toDateDisabled, toggleDisabled] = useState(false)\n\n    const {school, degree, from, to, fieldofstudy, current, description} = formData\n\n    const onChange = (e) => setFormData({...formData, [e.currentTarget.name]: e.currentTarget.value})\n\n    return (\n        <>\n            <h1 className=\"large text-primary\">\n                Add Your Education\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-code-branch\"></i>\n                Add any school or bootcamp that you have attended\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e => {\n                e.preventDefault()\n                addEducation(formData, history)\n            }}>\n                <div className=\"form-group\">\n                    <input value={school} onChange={(e) => onChange(e)} type=\"text\" placeholder=\"* School or Bootcamp\"\n                           name=\"school\" required/>\n                </div>\n                <div className=\"form-group\">\n                    <input value={degree} onChange={(e) => onChange(e)} type=\"text\"\n                           placeholder=\"* Degree or Certificate\"\n                           name=\"degree\" required/>\n                </div>\n                <div className=\"form-group\">\n                    <input value={fieldofstudy} onChange={(e) => onChange(e)} type=\"text\" placeholder=\"Field of Study\"\n                           name=\"fieldofstudy\"/>\n                </div>\n                <div className=\"form-group\">\n                    <h4>From Date</h4>\n                    <input value={from} onChange={(e) => onChange(e)} type=\"date\" name=\"from\"/>\n                </div>\n                <div className=\"form-group\">\n                    <p><input checked={current} onChange={(e) => {\n                        setFormData({...formData, current: !current})\n                        toggleDisabled(!toDateDisabled)\n                    }} type=\"checkbox\" name=\"current\" value=\"\"/>{' '} Current School</p>\n                </div>\n                <div className=\"form-group\">\n                    <h4>To Date</h4>\n                    <input disabled={toDateDisabled ? 'disabled' : ''} value={to} onChange={(e) => onChange(e)}\n                           type=\"date\" name=\"to\"/>\n                </div>\n                <div className=\"form-group\">\n          <textarea\n              value={description} onChange={(e) => onChange(e)}\n              name=\"description\"\n              cols=\"30\"\n              rows=\"5\"\n              placeholder=\"Program Description\"\n          ></textarea>\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\"/>\n                <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\n            </form>\n        </>\n    );\n};\n\nAddEducation.propTypes = {\n    addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {addEducation})(withRouter(AddEducation));","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst ProfileItem = ({\n                         profile: {\n                             user,\n                             status,\n                             company,\n                             location,\n                             skills\n                         }\n                     }) => {\n    return (\n        <div className='profile bg-light'>\n            <img src={user.avatar} alt=\"\" className=\"round-img\"/>\n            <div>\n                <h2>{user.name}</h2>\n                <p>{status} {company && <span>at {company}</span>}</p>\n                <p className=\"my-1\">{location && <span>{location}</span>}</p>\n                <Link to={`/profile/${user._id}`} className='btn btn-primary'>View Profile</Link>\n            </div>\n            <ul>\n                {skills.slice(0, 4).map((skill, index) => (\n                    <li key={index} className='text-primary'>\n                        <i className=\"fas fa-check\"></i>\n                        {skill}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nProfileItem.propTypes = {};\n\nexport default ProfileItem;","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {getProfiles} from \"../../actions/profile\";\nimport Spinner from \"../layout/Spinner\";\nimport ProfileItem from \"./ProfileItem\";\n\nconst Profiles = ({profile: {profiles, loading}, getProfiles}) => {\n    useEffect(() => {\n        getProfiles()\n    }, [getProfiles])\n    return (\n        <>\n            {loading ? <Spinner/> : <>\n                <h1 className=\"large text-primary\">Developers</h1>\n                <p className=\"lead\">\n                    <i className=\"fa fa-connectdevelop\"></i>\n                    Browse and connect with developers\n                </p>\n                <div className='profiles'>\n                    {profiles.length > 0 ? (\n                        profiles.map(profile => {\n                            return <ProfileItem key={profile._id} profile={profile}/>\n                        })\n                    ) : (\n                        <h4>No profiles found...</h4>\n                    )}\n                </div>\n            </>}\n            {/*<img src={Spinner} alt=\"\"/>*/}\n        </>\n    );\n};\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profiles: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n})\n\nexport default connect(mapStateToProps, {getProfiles})(Profiles);","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst ProfileTop = ({\n                        profile: {\n                            status,\n                            company,\n                            location,\n                            website,\n                            social,\n                            user: {name, avatar}\n                        }\n                    }) => {\n    return (\n        <div className=\"profile-top bg-primary p-2\">\n            <img\n                className=\"round-img my-1\"\n                src={avatar}\n                alt=\"avatar\"\n            />\n            <h1 className=\"large\">{name}</h1>\n            <p className=\"lead\">{status} {company && <span>at {company}</span>}</p>\n            <p>{location && <span>{location}</span>}</p>\n            <div className=\"icons my-1\">\n                {website && (\n                    <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fas fa-globe fa-2x\"></i>\n                    </a>\n                )}\n                {social && social.twitter && (\n                    <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-twitter fa-2x\"></i>\n                    </a>\n                )}\n                {social && social.facebook && (\n                    <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-facebook fa-2x\"></i>\n                    </a>\n                )}\n                {social && social.linkedin && (\n                    <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\n                    </a>\n                )}\n                {social && social.youtube && (\n                    <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-youtube fa-2x\"></i>\n                    </a>\n                )}\n                {social && social.instagram && (\n                    <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-instagram fa-2x\"></i>\n                    </a>\n                )}\n            </div>\n        </div>\n    )\n\n};\n\nProfileTop.propTypes = {\n    profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileTop;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({\n                          profile: {\n                              bio,\n                              skills,\n                              user: {name}\n                          }\n                      }) => {\n    return (\n        <div className=\"profile-about bg-light p-2\">\n            {bio && (\n                <>\n                    <h2 className=\"text-primary\">{name.trim().split(' ')[0]}s Bio</h2>\n                    <p>\n                        {bio}\n                    </p>\n                </>\n            )}\n            <div className=\"line\"></div>\n            <h2 className=\"text-primary\">Skill Set</h2>\n            {skills.map((skill, index) => (\n                <div key={index} className=\"p-1\"><i className=\"fa fa-check\"></i> {skill}</div>\n            ))}\n        </div>\n    )\n\n};\n\nProfileAbout.propTypes = {\n    profile: PropTypes.object.isRequired\n};\n\nexport default ProfileAbout;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from \"react-moment\";\n\nconst ProfileExperience = ({\n                               experience: {\n                                   company,\n                                   title,\n                                   location,\n                                   current,\n                                   to,\n                                   from,\n                                   description,\n                               }\n                           }) => {\n    return (\n        <div>\n            <h3 className='text-dark'>{company}</h3>\n            <p>\n                <Moment format='YYY/MM/DD'>{from}</Moment> - {!to ? ' Now' : <Moment format='YYY/MM/DD'>{to}</Moment>}\n            </p>\n            <p>\n                <strong>Position:</strong> {title}\n            </p>\n            <p>\n                <strong>Description:</strong> {description}\n            </p>\n        </div>\n    );\n};\n\nProfileExperience.propTypes = {\n    experience: PropTypes.array.isRequired,\n};\n\nexport default ProfileExperience;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from \"react-moment\";\n\nconst ProfileEdication = ({\n                              education: {\n                                  school,\n                                  degree,\n                                  fieldofstudy,\n                                  location,\n                                  current,\n                                  to,\n                                  from,\n                                  description\n                              }\n                          }) => {\n    return (\n        <div>\n            <h3 className='text-dark'>{school}</h3>\n            <p>\n                <Moment format='YYY/MM/DD'>{from}</Moment> - {!to ? ' Now' : <Moment format='YYY/MM/DD'>{to}</Moment>}\n            </p>\n            <p>\n                <strong>Degree:</strong> {degree}\n            </p>\n            <p>\n                <strong>Field of study:</strong> {fieldofstudy}\n            </p>\n            <p>\n                <strong>Description:</strong> {description}\n            </p>\n        </div>\n    );\n};\n\nProfileEdication.propTypes = {\n    education: PropTypes.array.isRequired,\n};\n\nexport default ProfileEdication;","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {getGithubRepos} from \"../../actions/profile\";\nimport Spinner from \"../layout/Spinner\";\nimport {connect} from \"react-redux\";\n\nconst ProfileGithub = ({username, getGithubRepos, repos}) => {\n    useEffect(() => {\n        getGithubRepos(username)\n    }, [getGithubRepos, username])\n    return (\n        <div className='profile-github'>\n            <h2 className=\"text-primary my-1\">Github Repos</h2>\n            {repos === 0 ? <Spinner/> : (\n                repos.map((repo) => (\n                    <div key={repo._id} className='repo bg-white p-1 my-1'>\n                        <div>\n                            <h4>\n                                <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {repo.name}\n                                </a>\n                            </h4>\n                            <p>{repo.description}</p>\n\n                        </div>\n                        <div>\n                            <ul>\n                                <li className='badge badge-primary'>\n                                    Stars: {repo.stargazers_count}\n                                </li>\n                                <li className='badge badge-dark'>\n                                    Watchers: {repo.watchers_count}\n                                </li>\n                                <li className='badge badge-light'>\n                                    Forks: {repo.forks_count}\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                ))\n            )}\n        </div>\n    );\n};\n\nProfileGithub.propTypes = {\n    getGithubRepos: PropTypes.func.isRequired,\n    repos: PropTypes.array.isRequired,\n    username: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    repos: state.profile.repos\n})\n\nexport default connect(mapStateToProps, {getGithubRepos})(ProfileGithub);","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {getProfilesById} from \"../../actions/profile\";\nimport Spinner from \"../layout/Spinner\";\nimport {Link} from \"react-router-dom\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport ProfileGithub from \"./ProfileGithub\";\n\nconst Profile = ({getProfilesById, profile: {profile, loading}, auth, match}) => {\n    useEffect(() => {\n        getProfilesById(match.params.id)\n    }, [getProfilesById, match.params.id])\n    return (\n        <>\n            {profile === null || loading ? <Spinner/> :\n                <>\n                    <Link className='btn btn-light' to={`/profiles`}>\n                        Back to Profiles\n                    </Link>\n                    {auth.isAuthenticated &&\n                    auth.loading === false &&\n                    auth.user._id === profile.user._id\n                    && (<Link to='/edit-profile' className='btn btn-dark'>Edit</Link>)}\n                    <div className=\"profile-grid my-1\">\n                        <ProfileTop profile={profile}/>\n                        <ProfileAbout profile={profile}/>\n                        <div className=\"profile-exp bg-white p-2\">\n                            <h2 className='text-primary'>Experience</h2>\n                            {profile.experience.length > 0 ? (\n                                <>\n                                    {profile.experience.map((experience) => (\n                                        <ProfileExperience\n                                            key={experience._id}\n                                            experience={experience}\n                                        />\n                                    ))}\n                                </>\n                            ) : (<h4>No experience credentials</h4>)}\n\n                        </div>\n                        <div className=\"profile-edu bg-white p-2\">\n                            <h2 className='text-primary'>Education</h2>\n                            {profile.education.length > 0 ? (\n                                <>\n                                    {profile.education.map((education) => (\n                                        <ProfileEducation\n                                            key={education._id}\n                                            education={education}\n                                        />\n                                    ))}\n                                </>\n                            ) : (<h4>No education credentials</h4>)}\n\n\n                        </div>\n                        <div className=\"profile-github bg-white p-2\">\n                            {profile.githubusername && (\n                                <ProfileGithub username={profile.githubusername}/>\n                            )}\n                        </div>\n                    </div>\n                </>\n            }\n        </>\n    );\n};\n\nProfile.propTypes = {\n    getProfilesById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    profile: state.profile,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, {getProfilesById})(Profile);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport Moment from \"react-moment\";\nimport {Link} from \"react-router-dom\";\nimport {addLike, deletePost, removeLike} from \"../../actions/post\";\n\nconst PostItem = ({\n                      auth,\n                      post: {_id, text, name, avatar, user, likes, comments, date},\n                      addLike,\n                      deletePost,\n                      removeLike,\n                      showActions\n                  }) => {\n    return (\n        <div className=\"post bg-white p-1 my-1\">\n            <div>\n                <Link to={`/profile/${user}`}>\n                    <img\n                        className=\"round-img\"\n                        src={avatar}\n                        alt=\"\"\n                    />\n                    <h4>{name}</h4>\n                </Link>\n            </div>\n            <div>\n                <p className=\"my-1\">\n                    {text}\n                </p>\n                <p className=\"post-date\">\n                    Posted on <Moment format='YYY/MM/DD'>{date}</Moment>\n                </p>\n                {showActions && <>\n                    <button onClick={(e) => addLike(_id)} type=\"button\" className=\"btn btn-light\">\n                        <i className=\"fas fa-thumbs-up\"></i>\n                        {likes.length > 0 && (\n                            <span>{likes.length}</span>\n                        )}\n                    </button>\n                    <button onClick={(e) => removeLike(_id)} type=\"button\" className=\"btn btn-light\">\n                        <i className=\"fas fa-thumbs-down\"></i>\n                    </button>\n                    <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n                        Discussion {comments.length > 0 && (\n                        <span className='comment-count'>{comments.length}</span>\n                    )}\n                    </Link>\n                    {!auth.loading && user === auth.user._id && (\n                        <button\n                            type=\"button\"\n                            onClick={(e) => deletePost(_id)}\n                            className=\"btn btn-danger\"\n                        >\n                            <i className=\"fas fa-times\"></i>\n                        </button>\n                    )}\n                </>}\n            </div>\n        </div>\n    );\n};\n\nPostItem.propTypes = {\n    auth: PropTypes.object.isRequired,\n    post: PropTypes.object.isRequired,\n    addLike: PropTypes.func.isRequired,\n    removeLike: PropTypes.func.isRequired,\n    deletePost: PropTypes.func.isRequired,\n};\n\nPostItem.defaultProps = {\n    showActions: true\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n})\n\nexport default connect(mapStateToProps, {addLike, removeLike, deletePost})(PostItem);","import axios from \"axios\";\nimport {ADD_COMMENT, DELETE_COMMENT, DELETE_POSTS, GET_POST, GET_POSTS, POSTS_ERROR, UPDATE_LIKES} from \"./types\";\nimport {setAlert} from \"./alert\";\n\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/posts')\n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type: POSTS_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n}\n\n//add like\n\nexport const addLike = (id) => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/like/${id}`)\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: {id, likes: res.data}\n        })\n    } catch (err) {\n        dispatch({\n            type: POSTS_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n}\n\n//remove like\n\nexport const removeLike = (id) => async dispatch => {\n    try {\n        const res = await axios.put(`/api/posts/unlike/${id}`)\n        dispatch({\n            type: UPDATE_LIKES,\n            payload: {id, likes: res.data}\n        })\n    } catch (err) {\n        dispatch({\n            type: POSTS_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n}\n\n//delete post\n\nexport const deletePost = (id) => async dispatch => {\n    try {\n        await axios.delete(`/api/posts/${id}`)\n        dispatch({\n            type: DELETE_POSTS,\n            payload: id\n        })\n        dispatch(setAlert('Post Removed', 'success'))\n    } catch (err) {\n        dispatch({\n            type: POSTS_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n}\n\n//add post\n\nexport const addPost = (formData) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    try {\n        const res = await axios.post(`/api/posts/`, formData, config)\n        dispatch({\n            type: DELETE_POSTS,\n            payload: res.data\n        })\n        dispatch(setAlert('Post Created', 'success'))\n    } catch (err) {\n        dispatch({\n            type: POSTS_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n}\n\n// get post\n\nexport const getPost = (id) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/posts/${id}`)\n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type: POSTS_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n}\n\n//add comment\n\nexport const addComment = (postId, formData) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    try {\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config)\n        dispatch({\n            type: ADD_COMMENT,\n            payload: res.data\n        })\n        dispatch(setAlert('Comment added successfully', 'success'))\n    } catch (err) {\n        dispatch({\n            type: POSTS_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n}\n\n//delete comment\n\nexport const deleteComment = (postId, commentId) => async dispatch => {\n    try {\n        await axios.delete(`/api/posts/comment/${postId}/${commentId}`)\n        dispatch({\n            type: DELETE_COMMENT,\n            payload: postId\n        })\n        dispatch(setAlert('Comment removed successfully', 'success'))\n    } catch (err) {\n        dispatch({\n            type: POSTS_ERROR,\n            payload: {\n                msg: err.response.statusText,\n                status: err.response.status\n            }\n        })\n    }\n}","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {addPost} from \"../../actions/post\";\n\nconst PostForm = ({addPost}) => {\n    const [text, setText] = useState('')\n    return (\n        <div className=\"post-form\">\n            <div className=\"bg-primary p\">\n                <h3>Create a Post</h3>\n            </div>\n            <form className=\"form my-1\" onSubmit={(e) => {\n                e.preventDefault()\n                addPost({text})\n                setText('')\n            }}>\n          <textarea\n              name=\"text\"\n              cols=\"30\"\n              rows=\"5\"\n              value={text}\n              onChange={(e) => setText(e.currentTarget.value)}\n              placeholder=\"Comment on this post\"\n              required\n          />\n                <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\"/>\n            </form>\n        </div>\n    );\n};\n\nPostForm.propTypes = {\n    addPost: PropTypes.func.isRequired,\n};\n\n\nexport default connect(null, {addPost})(PostForm);","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {getPosts} from \"../../actions/post\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"./PostItem\";\nimport PostForm from \"./PostForm\";\n\nconst Posts = ({getPosts, post: {posts, loading}}) => {\n    useEffect(() => {\n        getPosts()\n    }, [getPosts])\n    return loading ? <Spinner/> : (\n        <>\n            <h1 className=\"large text-primary\">Posts</h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\"></i>\n                Welcome to the community\n            </p>\n            <PostForm/>\n            <div className='posts'>\n                {posts.map(post => (\n                    <PostItem key={post._id} post={post}/>\n                ))}\n            </div>\n        </>\n    )\n};\n\nPosts.propTypes = {\n    post: PropTypes.object.isRequired,\n    getPosts: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n    post: state.post\n})\n\nexport default connect(mapStateToProps, {getPosts})(Posts);","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {addComment} from \"../../actions/post\";\n\nconst CommentForm = ({addComment, postId}) => {\n    const [text, setText] = useState('')\n    return (\n        <div className=\"post-form\">\n            <div className=\"bg-primary p\">\n                <h3>Leave a Comment</h3>\n            </div>\n            <form className=\"form my-1\" onSubmit={(e) => {\n                e.preventDefault()\n                addComment(postId, {text})\n                setText('')\n            }}>\n          <textarea\n              name=\"text\"\n              cols=\"30\"\n              rows=\"5\"\n              value={text}\n              onChange={(e) => setText(e.currentTarget.value)}\n              placeholder=\"Comment on this post\"\n              required\n          />\n                <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\"/>\n            </form>\n        </div>\n    );\n};\n\nCommentForm.propTypes = {\n    addComment: PropTypes.func.isRequired\n};\n\nexport default connect(null, {addComment})(CommentForm);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {deleteComment} from \"../../actions/post\";\nimport {connect} from \"react-redux\";\nimport Moment from \"react-moment\";\nimport {Link} from \"react-router-dom\";\n\nconst CommentItem = ({\n                         postId,\n                         comment: {_id, text, name, avatar, user, date},\n                         auth,\n                         deleteComment\n                     }) => {\n    return (\n        <div className=\"post bg-white p-1 my-1\">\n            <div>\n                <Link href={`/profile/${user}`}>\n                    <img\n                        className=\"round-img\"\n                        src={avatar}\n                        alt=\"\"\n                    />\n                    <h4>{name}</h4>\n                </Link>\n            </div>\n            <div>\n                <p className=\"my-1\">\n                    {text}\n                </p>\n                <p className=\"post-date\">\n                    Posted on <Moment format='YYY/MM/DD'>{date}</Moment>\n                </p>\n                {!auth.loading && user === auth.user._id && (\n                    <button onClick={e => deleteComment(postId, _id)} type='button' className='btn btn-danger'>\n                        <i className=\"fa fa-times\"></i>\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n})\n\nCommentItem.propTypes = {\n    postId: PropTypes.number.isRequired,\n    comment: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    deleteComment: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, {deleteComment})(CommentItem);","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {getPost} from \"../../actions/post\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"../Posts/PostItem\";\nimport {Link} from \"react-router-dom\";\nimport CommentForm from \"./CommentForm\";\nimport CommentItem from \"./CommentItem\";\n\nconst Post = ({getPost, post: {post, loading}, match}) => {\n    useEffect(() => {\n        getPost(match.params.id)\n    }, [getPost, match.params.id])\n    return loading || post === null ? <Spinner/> : <>\n        <Link to='/posts' className='btn'>Back to posts</Link>\n        <PostItem post={post} showActions={false}/>\n        <CommentForm postId={post._id}/>\n        <div className=\"comments\">\n            {post.comments.map(comment => (\n                <CommentItem key={comment._id} comment={comment} postId={post._id}/>\n            ))}\n        </div>\n    </>\n};\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    post: state.post\n})\n\nexport default connect(mapStateToProps, {getPost})(Post);","import React, {useEffect} from 'react'\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\n//Redux\nimport {Provider} from \"react-redux\"\nimport store from \"./components/store\";\nimport Alert from \"./components/layout/alert\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport {loadUser} from \"./actions/auth\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\nimport CreateProfile from \"./components/profile-forms/CreateProfile\";\nimport EditProfile from \"./components/profile-forms/EditProfile\";\nimport AddExperience from \"./components/profile-forms/AddExperience\";\nimport AddEducation from \"./components/profile-forms/AddEducation\";\nimport Profiles from \"./components/profiles/Profiles\";\nimport Profile from \"./components/profile/Profile\";\nimport Posts from \"./components/Posts/Posts\";\nimport Post from \"./components/Post/Post\";\n\nif (localStorage.token) {\n    setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n    useEffect(() => {\n        store.dispatch(loadUser())\n    }, [])\n    return (\n        <Provider store={store}>\n            <Router>\n                <Navbar/>\n                <Route exact path=\"/\" component={Landing}/>\n                <section className=\"container\">\n                    <Alert/>\n                    <Switch>\n                        <Route exact path=\"/register\" component={Register}/>\n                        <Route exact path=\"/login\" component={Login}/>\n                        <Route exact path=\"/profiles\" component={Profiles}/>\n                        <Route exact path=\"/profile/:id\" component={Profile}/>\n                        <PrivateRoute exact path=\"/dashboard\" component={Dashboard}/>\n                        <PrivateRoute exact path=\"/create-profile\" component={CreateProfile}/>\n                        <PrivateRoute exact path=\"/edit-profile\" component={EditProfile}/>\n                        <PrivateRoute exact path=\"/add-experience\" component={AddExperience}/>\n                        <PrivateRoute exact path=\"/add-education\" component={AddEducation}/>\n                        <PrivateRoute exact path=\"/posts\" component={Posts}/>\n                        <PrivateRoute exact path=\"/posts/:id\" component={Post}/>\n                    </Switch>\n                </section>\n            </Router>\n        </Provider>\n    )\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}